//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameSettingsContext {

    public GameSettingsEntity rocketPhysicsEntity { get { return GetGroup(GameSettingsMatcher.RocketPhysics).GetSingleEntity(); } }
    public RocketPhysicsComponent rocketPhysics { get { return rocketPhysicsEntity.rocketPhysics; } }
    public bool hasRocketPhysics { get { return rocketPhysicsEntity != null; } }

    public GameSettingsEntity SetRocketPhysics(float newMass, float newDamage) {
        if (hasRocketPhysics) {
            throw new Entitas.EntitasException("Could not set RocketPhysics!\n" + this + " already has an entity with RocketPhysicsComponent!",
                "You should check if the context already has a rocketPhysicsEntity before setting it or use context.ReplaceRocketPhysics().");
        }
        var entity = CreateEntity();
        entity.AddRocketPhysics(newMass, newDamage);
        return entity;
    }

    public void ReplaceRocketPhysics(float newMass, float newDamage) {
        var entity = rocketPhysicsEntity;
        if (entity == null) {
            entity = SetRocketPhysics(newMass, newDamage);
        } else {
            entity.ReplaceRocketPhysics(newMass, newDamage);
        }
    }

    public void RemoveRocketPhysics() {
        rocketPhysicsEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameSettingsEntity {

    public RocketPhysicsComponent rocketPhysics { get { return (RocketPhysicsComponent)GetComponent(GameSettingsComponentsLookup.RocketPhysics); } }
    public bool hasRocketPhysics { get { return HasComponent(GameSettingsComponentsLookup.RocketPhysics); } }

    public void AddRocketPhysics(float newMass, float newDamage) {
        var index = GameSettingsComponentsLookup.RocketPhysics;
        var component = (RocketPhysicsComponent)CreateComponent(index, typeof(RocketPhysicsComponent));
        component.Mass = newMass;
        component.Damage = newDamage;
        AddComponent(index, component);
    }

    public void ReplaceRocketPhysics(float newMass, float newDamage) {
        var index = GameSettingsComponentsLookup.RocketPhysics;
        var component = (RocketPhysicsComponent)CreateComponent(index, typeof(RocketPhysicsComponent));
        component.Mass = newMass;
        component.Damage = newDamage;
        ReplaceComponent(index, component);
    }

    public void RemoveRocketPhysics() {
        RemoveComponent(GameSettingsComponentsLookup.RocketPhysics);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameSettingsMatcher {

    static Entitas.IMatcher<GameSettingsEntity> _matcherRocketPhysics;

    public static Entitas.IMatcher<GameSettingsEntity> RocketPhysics {
        get {
            if (_matcherRocketPhysics == null) {
                var matcher = (Entitas.Matcher<GameSettingsEntity>)Entitas.Matcher<GameSettingsEntity>.AllOf(GameSettingsComponentsLookup.RocketPhysics);
                matcher.componentNames = GameSettingsComponentsLookup.componentNames;
                _matcherRocketPhysics = matcher;
            }

            return _matcherRocketPhysics;
        }
    }
}
