//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameflowContext {

    public GameflowEntity createPlanetsEntity { get { return GetGroup(GameflowMatcher.CreatePlanets).GetSingleEntity(); } }

    public bool isCreatePlanets {
        get { return createPlanetsEntity != null; }
        set {
            var entity = createPlanetsEntity;
            if (value != (entity != null)) {
                if (value) {
                    CreateEntity().isCreatePlanets = true;
                } else {
                    entity.Destroy();
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameflowEntity {

    static readonly CreatePlanetsComponent createPlanetsComponent = new CreatePlanetsComponent();

    public bool isCreatePlanets {
        get { return HasComponent(GameflowComponentsLookup.CreatePlanets); }
        set {
            if (value != isCreatePlanets) {
                var index = GameflowComponentsLookup.CreatePlanets;
                if (value) {
                    var componentPool = GetComponentPool(index);
                    var component = componentPool.Count > 0
                            ? componentPool.Pop()
                            : createPlanetsComponent;

                    AddComponent(index, component);
                } else {
                    RemoveComponent(index);
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameflowMatcher {

    static Entitas.IMatcher<GameflowEntity> _matcherCreatePlanets;

    public static Entitas.IMatcher<GameflowEntity> CreatePlanets {
        get {
            if (_matcherCreatePlanets == null) {
                var matcher = (Entitas.Matcher<GameflowEntity>)Entitas.Matcher<GameflowEntity>.AllOf(GameflowComponentsLookup.CreatePlanets);
                matcher.componentNames = GameflowComponentsLookup.componentNames;
                _matcherCreatePlanets = matcher;
            }

            return _matcherCreatePlanets;
        }
    }
}
