//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameflowContext {

    public GameflowEntity gameOverEntity { get { return GetGroup(GameflowMatcher.GameOver).GetSingleEntity(); } }
    public GameOverComponent gameOver { get { return gameOverEntity.gameOver; } }
    public bool hasGameOver { get { return gameOverEntity != null; } }

    public GameflowEntity SetGameOver(bool newPlayerWon) {
        if (hasGameOver) {
            throw new Entitas.EntitasException("Could not set GameOver!\n" + this + " already has an entity with GameOverComponent!",
                "You should check if the context already has a gameOverEntity before setting it or use context.ReplaceGameOver().");
        }
        var entity = CreateEntity();
        entity.AddGameOver(newPlayerWon);
        return entity;
    }

    public void ReplaceGameOver(bool newPlayerWon) {
        var entity = gameOverEntity;
        if (entity == null) {
            entity = SetGameOver(newPlayerWon);
        } else {
            entity.ReplaceGameOver(newPlayerWon);
        }
    }

    public void RemoveGameOver() {
        gameOverEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameflowEntity {

    public GameOverComponent gameOver { get { return (GameOverComponent)GetComponent(GameflowComponentsLookup.GameOver); } }
    public bool hasGameOver { get { return HasComponent(GameflowComponentsLookup.GameOver); } }

    public void AddGameOver(bool newPlayerWon) {
        var index = GameflowComponentsLookup.GameOver;
        var component = (GameOverComponent)CreateComponent(index, typeof(GameOverComponent));
        component.PlayerWon = newPlayerWon;
        AddComponent(index, component);
    }

    public void ReplaceGameOver(bool newPlayerWon) {
        var index = GameflowComponentsLookup.GameOver;
        var component = (GameOverComponent)CreateComponent(index, typeof(GameOverComponent));
        component.PlayerWon = newPlayerWon;
        ReplaceComponent(index, component);
    }

    public void RemoveGameOver() {
        RemoveComponent(GameflowComponentsLookup.GameOver);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameflowMatcher {

    static Entitas.IMatcher<GameflowEntity> _matcherGameOver;

    public static Entitas.IMatcher<GameflowEntity> GameOver {
        get {
            if (_matcherGameOver == null) {
                var matcher = (Entitas.Matcher<GameflowEntity>)Entitas.Matcher<GameflowEntity>.AllOf(GameflowComponentsLookup.GameOver);
                matcher.componentNames = GameflowComponentsLookup.componentNames;
                _matcherGameOver = matcher;
            }

            return _matcherGameOver;
        }
    }
}
