//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameflowContext {

    public GameflowEntity gameAssetsEntity { get { return GetGroup(GameflowMatcher.GameAssets).GetSingleEntity(); } }
    public GameAssetsComponent gameAssets { get { return gameAssetsEntity.gameAssets; } }
    public bool hasGameAssets { get { return gameAssetsEntity != null; } }

    public GameflowEntity SetGameAssets(Controllers.IGameAssets newValue) {
        if (hasGameAssets) {
            throw new Entitas.EntitasException("Could not set GameAssets!\n" + this + " already has an entity with GameAssetsComponent!",
                "You should check if the context already has a gameAssetsEntity before setting it or use context.ReplaceGameAssets().");
        }
        var entity = CreateEntity();
        entity.AddGameAssets(newValue);
        return entity;
    }

    public void ReplaceGameAssets(Controllers.IGameAssets newValue) {
        var entity = gameAssetsEntity;
        if (entity == null) {
            entity = SetGameAssets(newValue);
        } else {
            entity.ReplaceGameAssets(newValue);
        }
    }

    public void RemoveGameAssets() {
        gameAssetsEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameflowEntity {

    public GameAssetsComponent gameAssets { get { return (GameAssetsComponent)GetComponent(GameflowComponentsLookup.GameAssets); } }
    public bool hasGameAssets { get { return HasComponent(GameflowComponentsLookup.GameAssets); } }

    public void AddGameAssets(Controllers.IGameAssets newValue) {
        var index = GameflowComponentsLookup.GameAssets;
        var component = (GameAssetsComponent)CreateComponent(index, typeof(GameAssetsComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceGameAssets(Controllers.IGameAssets newValue) {
        var index = GameflowComponentsLookup.GameAssets;
        var component = (GameAssetsComponent)CreateComponent(index, typeof(GameAssetsComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveGameAssets() {
        RemoveComponent(GameflowComponentsLookup.GameAssets);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameflowMatcher {

    static Entitas.IMatcher<GameflowEntity> _matcherGameAssets;

    public static Entitas.IMatcher<GameflowEntity> GameAssets {
        get {
            if (_matcherGameAssets == null) {
                var matcher = (Entitas.Matcher<GameflowEntity>)Entitas.Matcher<GameflowEntity>.AllOf(GameflowComponentsLookup.GameAssets);
                matcher.componentNames = GameflowComponentsLookup.componentNames;
                _matcherGameAssets = matcher;
            }

            return _matcherGameAssets;
        }
    }
}
